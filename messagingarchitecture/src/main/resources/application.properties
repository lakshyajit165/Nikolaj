## suppress inspection "UnusedProperty" for whole file
#server.port = 8099
#
##AMQP RabbitMQ configuration
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#
## Additional RabbitMQ properties
#spring.rabbitmq.listener.simple.concurrency=4
#spring.rabbitmq.listener.simple.max-concurrency=8
#spring.rabbitmq.listener.simple.retry.initial-interval=5000
#
## Exchange Names
#registry.exchange.name=registry_exchange
#framework.exchange.name=framework_exchange
#csr.exchange.name=csr_exchange
#optimus.exchange.name=optimus_exchange
#notification.exchange.name=notification_exchange
#reports.exchange.name=reports_exchange
#ticket.exchange.name=ticket_exchange
#socketserver.exchange.name=socketserver_exchange
#
## Queue Names
## in socket server
#socketserver-ticket-closed.queue.name=socketserver-closed-queue-subscribe
#
## in command-registry
#no-intent-report-recieved.queue.name=registry-nointentrecieved-queue-subscribe
#no-command-report-recieved.queue.name=registry-nocommandrecieved-queue-subscribe
#
## in command-framework
#command-executed.queue.name=framework-executed-queue-subscribe
#
## in csr-service
#ticket-requested.queue.name=csr-requested-queue-subscribe
#csr-performance-updated.queue.name=csr-updated-queue-subscribe
##csr-performance-updated-publish.queue.name=csr-updated-queue-publish
#
## in ticket-service
##ticket-created.queue.name=ticket-created-queue-publish
##ticket-updated.queue.name=ticket-updated-queue-publish
#
## in optimus
##no-intent-report-generated.queue.name=optimus-nointentgenerated-queue-publish
##no-command-report-generated.queue.name=optimus-nocommandgenerated-queue-publish
#
## in report-generation service
##report-created.queue.name=reports-ticketcreated-queue-subscribe
##report-closed.queue.name=reports-ticketclosed-queue-subscribe
##report-updated.queue.name=reports-ticketupdated-queue-subscribe
##report-csrupdated.queue.name=reports-csrupdated-queue-subscribe
#ticket-details.queue.name=reports-ticketdetails-queue-subscribe
#csr-details.queue.name=reports-csrdetails-queue-subscribe
#
## in notification service
#mail-sent.queue.name=notification-sent-queue-subscribe
#
## queue-to-exchange binding keys
## for socket server
#sockerserver.ticket.closed.routing.key=socketserver.ticket.closed
#
## for framework
#framework.command.executed.routing.key=framework.command.executed
#
## for ticket
#ticket.ticket.created.routing.key=ticket.ticket.created
#ticket.ticket.updated.routing.key=ticket.ticket.updated
#
## for csr
#csr.ticket.requested.routing.key=csr.ticket.requested
#csr.csr.updated.routing.key=csr.csr.updated
#
## for optimus
#optimus.nointentreport.generated.routing.key=optimus.nointentreport.generated
#optimus.nocommandreport.generated.routing.key=optimus.nocommandreport.generated
#
## for registry
#registry.nointentreport.recieved.routing.key=registry.nointentreport.recieved
#registry.nocommandreport.recieved.routing.key=registry.nocommandreport.recieved
#
## for notification
#notification.mail.sent.routing.key=notification.mail.sent
#
## for reports
#reports.csroutlierreport.generated.routing.key=reports.csroutlierreport.generated
#reports.servicereport.generated.routing.key=reports.servicereport.generated
#reports.botreliabilityreport.generated.routing.key=reports.botreliabilityreport.generated
#reports.ticketstatusreport.generated.routing.key=reports.ticketstatusreport.generated
#
##exchange-to-exchange binding keys
#ticket.csr.exchange.key=csr.#.#
#ticket.notification.exchange.key= notification.#.#
#ticket.reports.exchange.key=reports.#.#
#ticket.socketserver.exchange.key=socketserver.#.#
#csr.reports.exchange.key=reports.#.#
#optimus.registry.exchange.key=registry.#.#
#framework.notification.exchange.key=notification.#.#
